apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs' // this line must come after 'com.android.application'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testApplicationId "com.example.newzz.test"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resConfigs "en", "vi"
    }

    def keystorePropertiesFile = rootProject.file("app/keystore/keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    def keystorePropertiesReleaseFile = rootProject.file("app/keystore/keystore_release.properties")
    def keystorePropertiesRelease = new Properties()
    keystorePropertiesRelease.load(new FileInputStream(keystorePropertiesReleaseFile))

    signingConfigs {
        debugConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }

        releaseConfig {
            keyAlias keystorePropertiesRelease['keyAlias']
            keyPassword keystorePropertiesRelease['keyPassword']
            storeFile file(keystorePropertiesRelease['storeFile'])
            storePassword keystorePropertiesRelease['storePassword']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debugConfig

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }

    android {
        lintOptions {
            checkReleaseBuilds false
            // Or, if you prefer, you can continue to check for errors in release builds,
            // but continue the build even when errors are found:
            abortOnError false
        }
    }

    flavorDimensions "default"

    productFlavors {
        dev {
            applicationId "com.example.newzzstaging"
            resValue "string", "app_name", '"newzz-S"'
            dimension "default"
        }

        production {
            applicationId "com.example.newzz"
            resValue "string", "app_name", '"newzz"'
            dimension "default"
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation project(':home')
    implementation project(":base")

    debugImplementation library.leakcanary

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    testImplementation testing.junit
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}